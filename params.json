{
  "name": "Coursera: R Programming, Homework 3 Question 1",
  "tagline": "",
  "body": "### Introduction\r\n\r\nThis data set is from the John Hopkins University Coursera Course titled: \"R Programming\". The current examples are pulled from question 1 of homework assignment 3. You can find the text (verbatim) for the assignment below:\r\n\r\n_Read the outcome data into R via the read.csv function and look at the ﬁrst few rows._\r\n_> outcome <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\") > head(outcome)_\r\n_There are many columns in this dataset. You can see how many by typing ncol(outcome) (you can see the number of rows with the nrow function). In addition, you can see the names of each column by typing names(outcome) (the names are also in the PDF document._\r\n\r\n_To make a simple histogram of the 30-day death rates from heart attack (column 11 in the outcome dataset), run_\r\n_> outcome[, 11] <- as.numeric(outcome[, 11]) > ## You may get a warning about NAs being introduced; that is okay > hist(outcome[, 11])_\r\n\r\n_Because we originally read the data in as character (by specifying colClasses = \"character\" we need to coerce the column to be numeric. You may get a warning about NAs being introduced but that is okay._\r\n\r\n## The following code will plot a histogram as specified.\r\n\r\n\r\n***\r\n\r\n***\r\n\r\n### First read in the file, do a little data cleaning and re-organization (e.g., omit NAs).\r\n\r\n    ## Read in the data\r\n\r\n    outcome_dat<-read.csv(\"outcome-of-care-measures.csv\", header = TRUE)\r\n\r\n    outcome_heartattack <- data.frame(as.double(outcome_dat$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack))\r\n    outcome_heartattack[outcome_heartattack == \"Not Available\"] <- NA\r\n    outcome_heartattack <- outcome_heartattack[complete.cases(outcome_heartattack),]\r\n    outcome_heartattack <- data.frame(as.double(outcome_heartattack))\r\n    names(outcome_heartattack)<-c(\"Deaths\")\r\n\r\n### Let's plot the histogram. Instead of using the generic `hist()` function in base R, let's overachieve and use `ggplot2`!\r\n\r\n    ## Let's over achieve and use ggplot2 because the regular plots in R aren't so fancy. Refer to the ggplot2 \r\n    ## documentation to understand how building plots works.\r\n\r\n    library(ggplot2)\r\n\r\n    object <- ggplot(data = outcome_heartattack, aes(x = Deaths))\r\n\r\n    hist <- geom_histogram(binwidth = 5, colour = \"black\", fill = \"cyan\")\r\n\r\n    axislabs <- labs(title = \"Histogram of 30-day death rates due to Heart Attack\",  y = \"# of Deaths\", x = \"Deaths (binned)\") \r\n\r\n    theme <- theme(panel.background = element_rect(colour = \"black\", fill = \"gray97\"))\r\n\r\n    scale_x <- scale_x_continuous(breaks = seq(0, 100, by = 10))\r\n\r\n    # Put all the ggplot pieces together\r\n\r\n    histogram<-object + hist + axislabs + theme + scale_x\r\n\r\n\r\n### Save the histogram.\r\n\r\n    # Save the plot\r\n    ggsave(\"histogram.png\", plot = histogram , width = 8, height = 6)\r\n\r\n\r\n### See the resulting histogram below.\r\n\r\n![](https://github.com/mjtat/-Coursera-Programming-Assignment-Homework-3-Part-1/blob/master/histogram.png?raw=true)\r\n\r\n***\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}